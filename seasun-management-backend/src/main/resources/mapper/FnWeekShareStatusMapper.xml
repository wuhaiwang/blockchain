<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seasun.management.mapper.FnWeekShareStatusMapper">
  <resultMap id="BaseResultMap" type="com.seasun.management.model.FnWeekShareStatus">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="week" jdbcType="INTEGER" property="week" />
    <result column="work_group_id" jdbcType="BIGINT" property="workGroupId" />
    <result column="lock_flag" jdbcType="BIT" property="lockFlag" />
    <result column="operator_id" jdbcType="BIGINT" property="operatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, year, week, work_group_id, lock_flag, operator_id, create_time
  </sql>
  <insert id="insertSelective" parameterType="com.seasun.management.model.FnWeekShareStatus">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fn_week_share_status
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="year != null">
        year,
      </if>
      <if test="week != null">
        week,
      </if>
      <if test="workGroupId != null">
        work_group_id,
      </if>
      <if test="lockFlag != null">
        lock_flag,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="week != null">
        #{week,jdbcType=INTEGER},
      </if>
      <if test="workGroupId != null">
        #{workGroupId,jdbcType=BIGINT},
      </if>
      <if test="lockFlag != null">
        #{lockFlag,jdbcType=BIT},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.seasun.management.model.FnWeekShareStatus">
    update fn_week_share_status
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="week != null">
        week = #{week,jdbcType=INTEGER},
      </if>
      <if test="workGroupId != null">
        work_group_id = #{workGroupId,jdbcType=BIGINT},
      </if>
      <if test="lockFlag != null">
        lock_flag = #{lockFlag,jdbcType=BIT},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- the following are user defined...-->
  <select id="selectLockedGroupByYearAndWeekAndGroupIds" resultType="com.seasun.management.model.FnWeekShareStatus" >
    select * from fn_week_share_status WHERE
    year=#{year} and week=#{week} and lock_flag = 1 and work_group_id in
    <foreach collection="groupIds" item="item" close=")" separator="," open="(">
      #{item}
    </foreach>
  </select>


  <update id="updateByWorkGroupIdsAndYearAndWeek" >
    update fn_week_share_status set lock_flag = #{lockFlag} WHERE
    year=#{year} and week=#{week} and operator_id=#{operatorId} and work_group_id in
    <foreach collection="groupIds" item="item" close=")" separator="," open="(">
      #{item}
    </foreach>
  </update>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into fn_week_share_status
    (year, week, work_group_id,lock_flag,operator_id,create_time)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.year},
      #{item.week},
      #{item.workGroupId},
      #{item.lockFlag},
      #{item.operatorId},
      #{item.createTime}
      )
    </foreach>
  </insert>
</mapper>