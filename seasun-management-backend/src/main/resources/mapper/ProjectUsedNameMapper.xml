<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seasun.management.mapper.ProjectUsedNameMapper">
  <resultMap id="BaseResultMap" type="com.seasun.management.model.ProjectUsedName">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, project_id
  </sql>
  <insert id="insertSelective" parameterType="com.seasun.management.model.ProjectUsedName">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project_used_name
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.seasun.management.model.ProjectUsedName">
    update project_used_name
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- the following are user defined...-->
  <delete id="deleteByProjectIdAndUsedNamesNotIn">
    delete from project_used_name
    where project_id=#{projectId}
    and name not in
    <foreach item="item" index="index" collection="usedNames"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into project_used_name
    (name, project_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.name},
      #{item.projectId}
      )
    </foreach>
  </insert>
</mapper>